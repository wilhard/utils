/**
 * @author wangjianbo
 * @created 2018-10-25
 */
package com.iamnotme.utils;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import com.alibaba.fastjson.JSONObject;
import org.apache.http.client.ClientProtocolException;
import org.quartz.JobExecutionException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import ctd.util.JSONUtils;

/**
 * @author wangjianbo
 *
 */
public class AutoLoggerJob {
	Logger logger = LoggerFactory
			.getLogger(AutoLoggerJob.class);
	public void execute() throws JobExecutionException {
		String yesterday=DateUtils.yesterdayOf(new Date());
		if(!isWorkday(yesterday)){
			logger.info(yesterday+"非工作日，不需要些日志");
			return;
		}
		List<Config> cfg=loadConfig();
		try {
			for(Config c:cfg){
				AutoLogger.writeByDate(c.getUserId(), c.getPassword(), yesterday, c.getDefaultConent());
			}
		} catch (ClientProtocolException e) {
			logger.error("日志补录出错", e);
		} catch (IOException e) {
			logger.error("日志补录出错", e);
		}
	}
	
	class Config{
		private String userId;
		private String password;
		private String defaultConent;
		public String getUserId() {
			return userId;
		}
		public void setUserId(String userId) {
			this.userId = userId;
		}
		public String getPassword() {
			return password;
		}
		public void setPassword(String password) {
			this.password = password;
		}
		public String getDefaultConent() {
			return defaultConent;
		}
		public void setDefaultConent(String defaultConent) {
			this.defaultConent = defaultConent;
		}
		/* (non-Javadoc)
		 * @see java.lang.Object#toString()
		 */
		@Override
		public String toString() {
			// TODO Auto-generated method stub
			return JSONUtils.toString(this);
		}
		
		
	}
	@SuppressWarnings({ "unchecked", "rawtypes" })
	private List<Config> loadConfig(){
		String filePath=this.getClass().getResource("/accounts.xls").getPath();
		File file=new File(filePath);
		List<List> data=ExcelReader.readExcel(file);
		List<Config> cfg=new ArrayList<AutoLoggerJob.Config>();
		for(int i=1;i<data.size();i++){
			List l=data.get(i);
			if(l.size()>0){
				Config c=new Config();
				c.setUserId((String) l.get(0));
				if(l.size()>0){
					
					c.setPassword((String) l.get(1));
					
					if(l.size()>2){
						c.setDefaultConent((String) l.get(2));
					}
				}
				cfg.add(c);
			}
		}
		return cfg;
	}
	/**
	 * 判断指定日期是否为工作日
	 * @author wangjianbo
	 * @created 2018-11-21
	 * @param yesterday
	 * @return
	 */
	private boolean isWorkday(String yesterday){
		Calendar calendar = Calendar.getInstance();
		calendar.add(Calendar.DATE, -1); //得到前一天
		Date date = calendar.getTime();
		DateFormat df = new SimpleDateFormat("yyyyMMdd");
		String time =df.format(date);
		//智能节假日 接口API地址
		String isWorkday=getURLContent("http://tool.bitefu.net/jiari//?d="+time+"&back=json");
		JSONObject jsonObject =JSONObject.parseObject(isWorkday);
		//如果是节假日
		if(null!=jsonObject.get(time)&&!"".equals(jsonObject.get(time))&&!"0".equals(jsonObject.get(time))){
//			System.out.println("节假日："+jsonObject);
			return false;
		}
 		return  true;
	}
	/**
	 * 调用http API接口
	 */
	public static String getURLContent(String urlStr) {
		/** 网络的url地址 */
		URL url = null;
		/** http连接 */
		HttpURLConnection httpConn = null;
		/**//** 输入流 */
		BufferedReader in = null;
		StringBuffer sb = new StringBuffer();
		try {
			url = new URL(urlStr);
			in = new BufferedReader(new InputStreamReader(url.openStream(), "GBK"));
			String str = null;
			while ((str = in.readLine()) != null) {
				sb.append(str);
			}
		} catch (Exception ex) {

		} finally {
			try {
				if (in != null) {
					in.close();
				}
			} catch (IOException ex) {
			}
		}
		String result = sb.toString();
		return result;
	}
	public static void main(String[] args) throws ClientProtocolException, IOException {
//		AutoLoggerJob job=new AutoLoggerJob();
//		System.out.println(job.loadConfig());
		
		/*Calendar c=Calendar.getInstance();
		c.setTime(DateUtils.parse("2018-11-18"));
		int weekday=c.get(Calendar.DAY_OF_WEEK);
		System.out.println(weekday);*/
		
		AutoLogger.writeByDate("6102", "asd123", "2018-12-20", "日志补录");
	}
}
